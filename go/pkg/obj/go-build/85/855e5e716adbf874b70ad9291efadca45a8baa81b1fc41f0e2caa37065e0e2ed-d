//go:cgo_ldflag "-g"
//go:cgo_ldflag "-O2"
// Code generated by cmd/cgo; DO NOT EDIT.

package main

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_callmeBackFunc *[0]byte

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgo_runtime_cgocallback runtime.cgocallback
func _cgo_runtime_cgocallback(unsafe.Pointer, unsafe.Pointer, uintptr, uintptr)

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})

//go:cgo_import_static _cgo_441f2236fbb9_Cfunc_bridgeCallback
//go:linkname __cgofn__cgo_441f2236fbb9_Cfunc_bridgeCallback _cgo_441f2236fbb9_Cfunc_bridgeCallback
var __cgofn__cgo_441f2236fbb9_Cfunc_bridgeCallback byte
var _cgo_441f2236fbb9_Cfunc_bridgeCallback = unsafe.Pointer(&__cgofn__cgo_441f2236fbb9_Cfunc_bridgeCallback)

//go:cgo_unsafe_args
func _Cfunc_bridgeCallback(p0 *[0]byte) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_441f2236fbb9_Cfunc_bridgeCallback, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_export_dynamic CallMeBack
//go:linkname _cgoexp_441f2236fbb9_CallMeBack _cgoexp_441f2236fbb9_CallMeBack
//go:cgo_export_static _cgoexp_441f2236fbb9_CallMeBack
//go:nosplit
//go:norace
func _cgoexp_441f2236fbb9_CallMeBack(a unsafe.Pointer, n int32, ctxt uintptr) {
	fn := _cgoexpwrap_441f2236fbb9_CallMeBack
	_cgo_runtime_cgocallback(**(**unsafe.Pointer)(unsafe.Pointer(&fn)), a, uintptr(n), ctxt);
}

func _cgoexpwrap_441f2236fbb9_CallMeBack(p0 _Ctype_callmeBackFunc) {
	CallMeBack(p0)
}
//go:cgo_export_dynamic Dummy
//go:linkname _cgoexp_441f2236fbb9_Dummy _cgoexp_441f2236fbb9_Dummy
//go:cgo_export_static _cgoexp_441f2236fbb9_Dummy
//go:nosplit
//go:norace
func _cgoexp_441f2236fbb9_Dummy(a unsafe.Pointer, n int32, ctxt uintptr) {
	fn := _cgoexpwrap_441f2236fbb9_Dummy
	_cgo_runtime_cgocallback(**(**unsafe.Pointer)(unsafe.Pointer(&fn)), a, uintptr(n), ctxt);
}

func _cgoexpwrap_441f2236fbb9_Dummy() (r0 int) {
	return Dummy()
}
